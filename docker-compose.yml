version: '2'

services:
  deepstream:
    restart: always
    image: deepstreamio/deepstream.io
    ports:
      - '6020:6020'
    volumes:
      - ./deepstream:/conf

  mongos:
    image: mongo
    container_name: mongos
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_router01_db:/data/db
      - mongodb_cluster_router01_config:/data/configdb
    depends_on:
      - router1
    entrypoint: ['bash', '/scripts/mongo-router.sh']

  router1:
    image: mongo
    restart: always
    container_name: mongo-router1
    command: mongos --port 27017 --configdb config/configsvr01:27017 --bind_ip_all
    ports:
      - 27017:27017
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_router01_db:/data/db
      - mongodb_cluster_router01_config:/data/configdb

  ## Config Servers
  configsvr:
    image: mongo
    restart: always
    container_name: mongo-config
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_configsvr01_db:/data/db
      - mongodb_cluster_configsvr01_config:/data/configdb
    depends_on:
      - configsvr01
    entrypoint: ['bash', '/scripts/mongo-server.sh']

  configsvr01:
    image: mongo
    restart: always
    container_name: mongo-config-01
    command: mongod --port 27017 --configsvr --replSet config
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_configsvr01_db:/data/db
      - mongodb_cluster_configsvr01_config:/data/configdb
    ports:
      - 27119:27017
    depends_on:
      - shard01-a
      - shard02-a

  ## Shard 1
  shard1:
    image: mongo
    restart: always
    container_name: shard1
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_a_db:/data/db
      - mongodb_cluster_shard01_a_config:/data/configdb
    depends_on:
      - shard01-a
    entrypoint: ['bash', '/scripts/mongo-shard1.sh']

  shard01-a:
    image: mongo
    restart: always
    container_name: shard1-1
    command: mongod --port 27017 --shardsvr --replSet shard1
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_a_db:/data/db
      - mongodb_cluster_shard01_a_config:/data/configdb
    ports:
      - 27122:27017

  ## Shard 2
  shard2:
    image: mongo
    restart: always
    container_name: shard2
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_a_db:/data/db
      - mongodb_cluster_shard02_a_config:/data/configdb
    depends_on:
      - shard02-a
    entrypoint: ['bash', '/scripts/mongo-shard2.sh']

  shard02-a:
    image: mongo
    restart: always
    container_name: shard2-1
    command: mongod --port 27017 --shardsvr --replSet shard2
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_a_db:/data/db
      - mongodb_cluster_shard02_a_config:/data/configdb
    ports:
      - 27125:27017

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    restart: always
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - '8081:8081'

  kafka-connect:
    restart: always
    image: confluentinc/cp-kafka-connect:5.1.0
    container_name: kafka-connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - '8083:8083'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: 'true'

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.2.2
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:29092'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'

volumes:
  mongodb_cluster_router01_db:
  mongodb_cluster_router01_config:

  mongodb_cluster_configsvr01_db:
  mongodb_cluster_configsvr01_config:

  mongodb_cluster_shard01_a_db:
  mongodb_cluster_shard01_a_config:

  mongodb_cluster_shard02_a_db:
  mongodb_cluster_shard02_a_config:
